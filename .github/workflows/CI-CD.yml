---
name: CI-CD

on: [push]

jobs:
  lint:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Run Super-Linter
        uses: github/super-linter@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_ISORT: false
          PYTHON_FLAKE8_CONFIG_FILE: .flake8
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Run unittest
        run: |
          pip3 install -r requirements.txt
          python3 -m unittest -v jorkol/discord_cage_bot/tests/*_test.py
        shell: bash
  dockerize:
    needs: [lint, unit-test]
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: jorsanders/discord_cage_bot:latest
  production-deploy:
    needs: [dockerize]
    # if: github.ref == 'refs/heads/master'
    environment: production
    runs-on: ubuntu-latest
    name: Deploy to production server
    steps:
    -
      name: Checkout code
      uses: actions/checkout@v2
    -
      name: Deploy Discord Cage bot to production server and start it
      run: |
        echo "===== Creating ~/.ssh directory"
        mkdir -p ~/.ssh/
        echo "$EC2_KNOWN_HOSTS" > ~/.ssh/known_hosts
        echo "$EC2_DEPLOY_KEY" > ~/.ssh/ec2_deploy.key
        chmod 600 ~/.ssh/ec2_deploy.key
        echo "===== Starting SSH Agent"
        # shellcheck disable=SC2046
        eval $(ssh-agent -s)
        echo "===== Adding key to agent"
        ssh-add ~/.ssh/ec2_deploy.key
        echo "(Re-)starting Discord Cage bot"
      shell: bash
      env:
        EC2_DEPLOY_KEY: ${{secrets.EC2_DEPLOY_KEY}}
        EC2_KNOWN_HOSTS: ${{secrets.EC2_KNOWN_HOSTS}}
        EC2_SSH: ${{secrets.EC2_SSH}}
