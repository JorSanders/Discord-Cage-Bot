---
name: CI-CD

on: [push]

jobs:
  lint:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unittest
        run: |
          pwd
          ls -altr .flake8
      - name: Run Super-Linter
        uses: github/super-linter@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_ISORT: false
          PYTHON_FLAKE8_CONFIG_FILE: .flake8
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unittest
        run: |
          pip3 install discord
          python3  -m unittest jorkol/discord_cage_bot/tests/*.py
        shell: bash
  production-deploy:
    needs: [lint, unit-test]
    if: github.ref == 'refs/heads/master'
    environment: production
    runs-on: ubuntu-latest
    name: Deploy to production server
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Deploy Discord Cage bot to production server and start it
      run: |
        echo "===== Creating ~/.ssh directory"
        mkdir -p ~/.ssh/
        echo "$EC2_KNOWN_HOSTS" > ~/.ssh/known_hosts
        echo "$EC2_DEPLOY_KEY" > ~/.ssh/ec2_deploy.key
        chmod 600 ~/.ssh/ec2_deploy.key
        echo "===== Starting SSH Agent"
        eval `ssh-agent -s`
        echo "===== Adding key to agent"
        ssh-add ~/.ssh/ec2_deploy.key
        echo "===== Copying files to EC2-AWS"
        rsync -r --exclude="tests" --exclude="__pycache__" jorkol/ ${{secrets.EC2_SSH}}:/usr/local/app/jorkol
        echo "(Re-)starting Discord Cage bot"
        ssh ${{secrets.EC2_SSH}} 'pkill -9 python; \
          cd /usr/local/app/; \
          python3 -m jorkol.discord_cage_bot.src.discord_cage_bot > /var/log/discord_cage_bot.log 2>&1 &'
      shell: bash
      env:
        EC2_DEPLOY_KEY: ${{secrets.EC2_DEPLOY_KEY}}
        EC2_KNOWN_HOSTS: ${{secrets.EC2_KNOWN_HOSTS}}
        EC2_SSH: ${{secrets.EC2_SSH}}
